$breakpoints: (
        'xs' : (max-width: 767px),
        'sm' : (min-width: 768px),
        'md' : (min-width: 992px),
        'lg' : (min-width: 1200px),
        'xl' : (min-width: 1700px)
);

// Taken from http://www.sitepoint.com/managing-responsive-breakpoints-sass/
@mixin respond-to($name) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }

    // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoints}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}


@keyframes fadeInAnimation {
  from {
    opacity: 0.2;
  }
  to {
    opacity: 1;
  }
}

// Based on:
// http://joshbroton.com/multiple-background-images-using-sass-and-media-queries/
// Use like:
// @include responsive-background-image('mike_olson_on_wave', 'jpg');
@mixin responsive-background-image($name, $extension) {
  //  background: url(/images/backgrounds/#{$name}-lg.#{$extension}) no-repeat center center;
  //  background-size: cover;

  @include respond-to('xs') {
    background: url(/images/backgrounds/#{$name}-xs.#{$extension}) no-repeat center center;
    background-size: cover;
    animation: fadeInAnimation 2s;
  }
  @include respond-to('sm') {
    background: url(/images/backgrounds/#{$name}-sm.#{$extension}) no-repeat center center;
    background-size: cover;
    animation: fadeInAnimation 2s;
  }
  @include respond-to('md') {
    background: url(/images/backgrounds/#{$name}-md.#{$extension}) no-repeat center center;
    background-size: cover;
    animation: fadeInAnimation 2s;
  }
  @include respond-to('lg') {
    background: url(/images/backgrounds/#{$name}-lg.#{$extension}) no-repeat center center;
    background-size: cover;
    animation: fadeInAnimation 2s;
  }
  @include respond-to('xl') {
    background: url(/images/backgrounds/#{$name}-xl.#{$extension}) no-repeat center center;
    background-size: cover;
    animation: fadeInAnimation 2s;
  }
}